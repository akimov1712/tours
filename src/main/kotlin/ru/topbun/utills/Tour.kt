package ru.topbun.utills

import ru.topbun.models.meals.Meals
import ru.topbun.models.tours.HottourResponse
import ru.topbun.models.tours.TourDTO
import ru.topbun.models.tours.Tours


fun List<List<TourDTO>>.getFilteredTours(): List<List<TourDTO>> =
    filter { group -> group.none { Tours.haveSuspension(it.tourid) } }

fun HottourResponse.organizedTours(): List<List<TourDTO>> =
    hottours.tours.groupBy { it.countryname }.values.toList()

private fun List<TourDTO>.getNearTour(): TourDTO =
    minByOrNull { it.price } ?: throw NoSuchElementException("No tours available")

fun List<TourDTO>.getPreviewImage(): String = this.maxBy {
    it.hotelstars
}.also { println(it) }.hotelpicture

fun List<TourDTO>.buildMessageToPost(): String{
    val nearTour = this.getNearTour()
    val date = nearTour.flydate.parseDate()
    val hotels = StringBuilder()
    val countryName = if (nearTour.countryname == "–†–æ—Å—Å–∏—è") nearTour.hotelregionname else nearTour.countryname
    this.forEach {
        val msg = "\uD83C\uDFE8 ${it.hotelname} (${it.hotelstars} ‚≠ê) - ".capitalizeWords()
        val price = "<a href=\"https://tyrmarket.ru/podbor-tura#tvtourid=${it.tourid}\">${formatPrice(it.price)} –†—É–±</a>\n"
        hotels.append(msg + price)
    }
    return """
üî• $countryName –∏–∑ ${nearTour.departurenamefrom} ‚úàÔ∏è

üìÖ ${date.formatToDayWithMonth()} –Ω–∞ ${nearTour.nights + 1} –¥–Ω–µ–π
üçΩÔ∏è –ü–∏—Ç–∞–Ω–∏–µ: ${Meals.selectMeal(nearTour.meal).russian}

üè® –û—Ç–µ–ª–∏ –∏ —Ü–µ–Ω—ã:
$hotels

‚ö°Ô∏è–¶–µ–Ω–∞ –∑–∞ 1 —á–µ–ª–æ–≤–µ–∫–∞ –ø—Ä–∏ 2-–º–µ—Å—Ç–Ω–æ–º —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏.
        """.trimIndent()
}